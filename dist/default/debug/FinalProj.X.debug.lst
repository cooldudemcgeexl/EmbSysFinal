

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 19 19:21:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F886 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282                           
   283                           	psect	idataBANK0
   284  06B9                     __pidataBANK0:
   285                           
   286                           ;initializer for _keyMap
   287  06B9  3431               	retlw	49
   288  06BA  3432               	retlw	50
   289  06BB  3433               	retlw	51
   290  06BC  3441               	retlw	65
   291  06BD  3434               	retlw	52
   292  06BE  3435               	retlw	53
   293  06BF  3436               	retlw	54
   294  06C0  3442               	retlw	66
   295  06C1  3437               	retlw	55
   296  06C2  3438               	retlw	56
   297  06C3  3439               	retlw	57
   298  06C4  3443               	retlw	67
   299  06C5  342A               	retlw	42
   300  06C6  3430               	retlw	48
   301  06C7  3423               	retlw	35
   302  06C8  3444               	retlw	68
   303  0007                     _PORTC	set	7
   304  0006                     _PORTBbits	set	6
   305  0007                     _PORTCbits	set	7
   306  000B                     _INTCONbits	set	11
   307  0018                     _RCSTAbits	set	24
   308  0006                     _PORTB	set	6
   309  000C                     _PIR1bits	set	12
   310  0087                     _TRISC	set	135
   311  0086                     _TRISBbits	set	134
   312  0086                     _TRISB	set	134
   313  0087                     _TRISCbits	set	135
   314  008F                     _OSCCONbits	set	143
   315  009A                     _SPBRGH	set	154
   316  0099                     _SPBRG	set	153
   317  008C                     _PIE1bits	set	140
   318  0098                     _TXSTAbits	set	152
   319  0187                     _BAUDCTLbits	set	391
   320                           
   321                           	psect	cinit
   322  07E6                     start_initialization:	
   323                           ; #config settings
   324                           
   325  07E6                     __initialization:
   326                           
   327                           ; Initialize objects allocated to BANK0
   328  07E6  1383               	bcf	3,7	;select IRP bank0
   329  07E7  3050               	movlw	low (__pdataBANK0+16)
   330  07E8  00FD               	movwf	btemp+-1
   331  07E9  3006               	movlw	high __pidataBANK0
   332  07EA  00FE               	movwf	btemp
   333  07EB  30B9               	movlw	low __pidataBANK0
   334  07EC  00FF               	movwf	btemp+1
   335  07ED  3040               	movlw	low __pdataBANK0
   336  07EE  0084               	movwf	4
   337  07EF  120A  118A  26CD  120A  118A  	fcall	init_ram0
   338                           
   339                           ; Clear objects allocated to BANK0
   340  07F4  3020               	movlw	low __pbssBANK0
   341  07F5  0084               	movwf	4
   342  07F6  3040               	movlw	low (__pbssBANK0+32)
   343  07F7  120A  118A  26A2  120A  118A  	fcall	clear_ram0
   344  07FC                     end_of_initialization:	
   345                           ;End of C runtime variable initialization code
   346                           
   347  07FC                     __end_of__initialization:
   348  07FC  0183               	clrf	3
   349  07FD  120A  118A  2EDC   	ljmp	_main	;jump to C main() function
   350                           
   351                           	psect	bssBANK0
   352  0020                     __pbssBANK0:
   353  0020                     _bitMap:
   354  0020                     	ds	32
   355                           
   356                           	psect	dataBANK0
   357  0040                     __pdataBANK0:
   358  0040                     _keyMap:
   359  0040                     	ds	16
   360                           
   361                           	psect	inittext
   362  06C9                     init_fetch0:	
   363                           ;	Called with low address in FSR and high address in W
   364                           
   365  06C9  087E               	movf	btemp,w
   366  06CA  008A               	movwf	10
   367  06CB  087F               	movf	btemp+1,w
   368  06CC  0082               	movwf	2
   369  06CD                     init_ram0:	
   370                           ;Called with:
   371                           ;	high address of idata address in btemp 
   372                           ;	low address of idata address in btemp+1 
   373                           ;	low address of data in FSR
   374                           ;	high address + 1 of data in btemp-1
   375                           
   376  06CD  120A  118A  26C9  120A  118A  	fcall	init_fetch0
   377  06D2  0080               	movwf	0
   378  06D3  0A84               	incf	4,f
   379  06D4  0804               	movf	4,w
   380  06D5  067D               	xorwf	btemp+-1,w
   381  06D6  1903               	btfsc	3,2
   382  06D7  3400               	retlw	0
   383  06D8  0AFF               	incf	btemp+1,f
   384  06D9  1903               	btfsc	3,2
   385  06DA  0AFE               	incf	btemp,f
   386  06DB  2ECD               	goto	init_ram0
   387                           
   388                           	psect	clrtext
   389  06A2                     clear_ram0:	
   390                           ;	Called with FSR containing the base address, and
   391                           ;	W with the last address+1
   392                           
   393  06A2  0064               	clrwdt	;clear the watchdog before getting into this loop
   394  06A3                     clrloop0:
   395  06A3  0180               	clrf	0	;clear RAM location pointed to by FSR
   396  06A4  0A84               	incf	4,f	;increment pointer
   397  06A5  0604               	xorwf	4,w	;XOR with final address
   398  06A6  1903               	btfsc	3,2	;have we reached the end yet?
   399  06A7  3400               	retlw	0	;all done for this memory range, return
   400  06A8  0604               	xorwf	4,w	;XOR again to restore value
   401  06A9  2EA3               	goto	clrloop0	;do the next byte
   402                           
   403                           	psect	cstackCOMMON
   404  0071                     __pcstackCOMMON:
   405  0071                     ?_rxISR:
   406  0071                     ??_rxISR:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0071                     ?_readKey:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0071                     ?_main:	
   413                           ; 1 bytes @ 0x0
   414                           
   415                           
   416                           ; 1 bytes @ 0x0
   417  0071                     	ds	2
   418  0073                     ??_readKey:
   419                           
   420                           ; 1 bytes @ 0x2
   421  0073                     	ds	3
   422  0076                     ??_main:
   423                           
   424                           ; 1 bytes @ 0x5
   425  0076                     	ds	3
   426                           
   427                           	psect	maintext
   428  06DC                     __pmaintext:	
   429 ;;
   430 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   431 ;;
   432 ;; *************** function _main *****************
   433 ;; Defined at:
   434 ;;		line 223 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  keyPressed      1    0        unsigned char 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : B00/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0
   450 ;;      Temps:          3       0       0       0       0
   451 ;;      Totals:         3       0       0       0       0
   452 ;;Total ram usage:        3 bytes
   453 ;; Hardware stack levels required when called: 2
   454 ;; This function calls:
   455 ;;		_readKey
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461  06DC                     _main:	
   462                           ;psect for function _main
   463                           
   464  06DC                     l887:	
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;main.c: 225:     TRISB = 0;
   470  06DC  1683               	bsf	3,5	;RP0=1, select bank1
   471  06DD  1303               	bcf	3,6	;RP1=0, select bank1
   472  06DE  0186               	clrf	6	;volatile
   473                           
   474                           ;main.c: 226:     TRISC = 0;
   475  06DF  0187               	clrf	7	;volatile
   476                           
   477                           ;main.c: 227:     PORTB = 0x00;
   478  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   479  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   480  06E2  0186               	clrf	6	;volatile
   481                           
   482                           ;main.c: 228:     PORTC = 0;
   483  06E3  0187               	clrf	7	;volatile
   484  06E4                     l889:
   485                           
   486                           ;main.c: 237:     PORTB = 0xFF;
   487  06E4  30FF               	movlw	255
   488  06E5  0086               	movwf	6	;volatile
   489  06E6                     l891:
   490                           
   491                           ;main.c: 238:     _delay((unsigned long)((50)*(8000000/4000.0)));
   492  06E6  3082               	movlw	130
   493  06E7  00F7               	movwf	??_main+1
   494  06E8  30DD               	movlw	221
   495  06E9  00F6               	movwf	??_main
   496  06EA                     u147:
   497  06EA  0BF6               	decfsz	??_main,f
   498  06EB  2EEA               	goto	u147
   499  06EC  0BF7               	decfsz	??_main+1,f
   500  06ED  2EEA               	goto	u147
   501  06EE  2EEF               	nop2
   502                           
   503                           ;main.c: 239:     PORTB = 0;
   504  06EF  1283               	bcf	3,5	;RP0=0, select bank0
   505  06F0  1303               	bcf	3,6	;RP1=0, select bank0
   506  06F1  0186               	clrf	6	;volatile
   507  06F2                     l893:
   508  06F2  120A  118A  2724  120A  118A  	fcall	_readKey
   509  06F7                     l895:
   510                           
   511                           ;main.c: 248:         _delay((unsigned long)((50)*(8000000/4000.0)));
   512  06F7  3082               	movlw	130
   513  06F8  00F7               	movwf	??_main+1
   514  06F9  30DD               	movlw	221
   515  06FA  00F6               	movwf	??_main
   516  06FB                     u157:
   517  06FB  0BF6               	decfsz	??_main,f
   518  06FC  2EFB               	goto	u157
   519  06FD  0BF7               	decfsz	??_main+1,f
   520  06FE  2EFB               	goto	u157
   521  06FF  2F00               	nop2
   522  0700                     l897:
   523                           
   524                           ;main.c: 250:         TRISB = 0;
   525  0700  1683               	bsf	3,5	;RP0=1, select bank1
   526  0701  1303               	bcf	3,6	;RP1=0, select bank1
   527  0702  0186               	clrf	6	;volatile
   528  0703                     l899:
   529                           
   530                           ;main.c: 252:         if(bitMap[0][0] == 1)
   531  0703  1283               	bcf	3,5	;RP0=0, select bank0
   532  0704  1303               	bcf	3,6	;RP1=0, select bank0
   533  0705  0320               	decf	_bitMap,w
   534  0706  0421               	iorwf	_bitMap+1,w
   535  0707  1D03               	btfss	3,2
   536  0708  2F0A               	goto	u111
   537  0709  2F0B               	goto	u110
   538  070A                     u111:
   539  070A  2F0C               	goto	l903
   540  070B                     u110:
   541  070B                     l901:
   542                           
   543                           ;main.c: 253:         {;main.c: 254:             PORTBbits.RB0 = 1;
   544  070B  1406               	bsf	6,0	;volatile
   545  070C                     l903:
   546                           
   547                           ;main.c: 256:         if(bitMap[0][1] == 1 )
   548  070C  0322               	decf	_bitMap+2,w
   549  070D  0423               	iorwf	_bitMap+3,w
   550  070E  1D03               	btfss	3,2
   551  070F  2F11               	goto	u121
   552  0710  2F12               	goto	u120
   553  0711                     u121:
   554  0711  2F13               	goto	l907
   555  0712                     u120:
   556  0712                     l905:
   557                           
   558                           ;main.c: 257:         {;main.c: 258:             PORTBbits.RB1 = 1;
   559  0712  1486               	bsf	6,1	;volatile
   560  0713                     l907:
   561                           
   562                           ;main.c: 267:         _delay((unsigned long)((500)*(8000000/4000.0)));
   563  0713  3006               	movlw	6
   564  0714  00F8               	movwf	??_main+2
   565  0715  3013               	movlw	19
   566  0716  00F7               	movwf	??_main+1
   567  0717  30AD               	movlw	173
   568  0718  00F6               	movwf	??_main
   569  0719                     u167:
   570  0719  0BF6               	decfsz	??_main,f
   571  071A  2F19               	goto	u167
   572  071B  0BF7               	decfsz	??_main+1,f
   573  071C  2F19               	goto	u167
   574  071D  0BF8               	decfsz	??_main+2,f
   575  071E  2F19               	goto	u167
   576  071F  2F20               	nop2
   577  0720  2EF2               	goto	l893
   578  0721  120A  118A  280C   	ljmp	start
   579  0724                     __end_of_main:
   580                           
   581                           	psect	text1
   582  0724                     __ptext1:	
   583 ;; *************** function _readKey *****************
   584 ;; Defined at:
   585 ;;		line 174 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      unsigned char 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          3       0       0       0       0
   602 ;;      Totals:         3       0       0       0       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613  0724                     _readKey:	
   614                           ;psect for function _readKey
   615                           
   616  0724                     l763:	
   617                           ;incstack = 0
   618                           ; Regs used in _readKey: [wreg+status,2+status,0]
   619                           
   620                           
   621                           ;main.c: 176:     TRISB = 1;
   622  0724  3001               	movlw	1
   623  0725  1683               	bsf	3,5	;RP0=1, select bank1
   624  0726  1303               	bcf	3,6	;RP1=0, select bank1
   625  0727  0086               	movwf	6	;volatile
   626  0728                     l765:
   627                           
   628                           ;main.c: 177:     TRISBbits.TRISB7 = 1;
   629  0728  1786               	bsf	6,7	;volatile
   630  0729                     l767:
   631                           
   632                           ;main.c: 178:     TRISBbits.TRISB6 = 1;
   633  0729  1706               	bsf	6,6	;volatile
   634  072A                     l769:
   635                           
   636                           ;main.c: 179:     TRISBbits.TRISB5 = 1;
   637  072A  1686               	bsf	6,5	;volatile
   638  072B                     l771:
   639                           
   640                           ;main.c: 180:     TRISBbits.TRISB4 = 1;
   641  072B  1606               	bsf	6,4	;volatile
   642  072C                     l773:
   643                           
   644                           ;main.c: 182:     TRISBbits.TRISB3 = 0;
   645  072C  1186               	bcf	6,3	;volatile
   646  072D                     l775:
   647                           
   648                           ;main.c: 183:     PORTBbits.RB3 = 1;
   649  072D  1283               	bcf	3,5	;RP0=0, select bank0
   650  072E  1303               	bcf	3,6	;RP1=0, select bank0
   651  072F  1586               	bsf	6,3	;volatile
   652  0730                     l777:
   653                           
   654                           ;main.c: 184:     bitMap[0][0] = PORTBbits.RB7;
   655  0730  0D06               	rlf	6,w	;volatile
   656  0731  0D06               	rlf	6,w	;volatile
   657  0732  3901               	andlw	1
   658  0733  00F3               	movwf	??_readKey
   659  0734  01F4               	clrf	??_readKey+1
   660  0735  0873               	movf	??_readKey,w
   661  0736  00A0               	movwf	_bitMap
   662  0737  0874               	movf	??_readKey+1,w
   663  0738  00A1               	movwf	_bitMap+1
   664  0739                     l779:
   665                           
   666                           ;main.c: 185:     bitMap[1][0] = PORTBbits.RB6;
   667  0739  0E06               	swapf	6,w	;volatile
   668  073A  00F3               	movwf	??_readKey
   669  073B  0CF3               	rrf	??_readKey,f
   670  073C  0C73               	rrf	??_readKey,w
   671  073D  3901               	andlw	1
   672  073E  00F4               	movwf	??_readKey+1
   673  073F  01F5               	clrf	??_readKey+2
   674  0740  0874               	movf	??_readKey+1,w
   675  0741  00A8               	movwf	_bitMap+8
   676  0742  0875               	movf	??_readKey+2,w
   677  0743  00A9               	movwf	_bitMap+9
   678  0744                     l781:
   679                           
   680                           ;main.c: 186:     bitMap[2][0] = PORTBbits.RB5;
   681  0744  0E06               	swapf	6,w	;volatile
   682  0745  00F3               	movwf	??_readKey
   683  0746  0C73               	rrf	??_readKey,w
   684  0747  3901               	andlw	1
   685  0748  00F4               	movwf	??_readKey+1
   686  0749  01F5               	clrf	??_readKey+2
   687  074A  0874               	movf	??_readKey+1,w
   688  074B  00B0               	movwf	_bitMap+16
   689  074C  0875               	movf	??_readKey+2,w
   690  074D  00B1               	movwf	_bitMap+17
   691  074E                     l783:
   692                           
   693                           ;main.c: 187:     bitMap[3][0] = PORTBbits.RB4;
   694  074E  0E06               	swapf	6,w	;volatile
   695  074F  3901               	andlw	1
   696  0750  00F3               	movwf	??_readKey
   697  0751  01F4               	clrf	??_readKey+1
   698  0752  0873               	movf	??_readKey,w
   699  0753  00B8               	movwf	_bitMap+24
   700  0754  0874               	movf	??_readKey+1,w
   701  0755  00B9               	movwf	_bitMap+25
   702  0756                     l785:
   703                           
   704                           ;main.c: 188:     PORTBbits.RB3 = 0;
   705  0756  1186               	bcf	6,3	;volatile
   706  0757                     l787:
   707                           
   708                           ;main.c: 189:     TRISBbits.TRISB3 = 1;
   709  0757  1683               	bsf	3,5	;RP0=1, select bank1
   710  0758  1303               	bcf	3,6	;RP1=0, select bank1
   711  0759  1586               	bsf	6,3	;volatile
   712  075A                     l789:
   713                           
   714                           ;main.c: 191:     TRISBbits.TRISB2 = 0;
   715  075A  1106               	bcf	6,2	;volatile
   716  075B                     l791:
   717                           
   718                           ;main.c: 192:     PORTBbits.RB2 = 1;
   719  075B  1283               	bcf	3,5	;RP0=0, select bank0
   720  075C  1303               	bcf	3,6	;RP1=0, select bank0
   721  075D  1506               	bsf	6,2	;volatile
   722  075E                     l793:
   723                           
   724                           ;main.c: 193:     bitMap[0][1] = PORTBbits.RB7;
   725  075E  0D06               	rlf	6,w	;volatile
   726  075F  0D06               	rlf	6,w	;volatile
   727  0760  3901               	andlw	1
   728  0761  00F3               	movwf	??_readKey
   729  0762  01F4               	clrf	??_readKey+1
   730  0763  0873               	movf	??_readKey,w
   731  0764  00A2               	movwf	_bitMap+2
   732  0765  0874               	movf	??_readKey+1,w
   733  0766  00A3               	movwf	_bitMap+3
   734  0767                     l795:
   735                           
   736                           ;main.c: 194:     bitMap[1][1] = PORTBbits.RB6;
   737  0767  0E06               	swapf	6,w	;volatile
   738  0768  00F3               	movwf	??_readKey
   739  0769  0CF3               	rrf	??_readKey,f
   740  076A  0C73               	rrf	??_readKey,w
   741  076B  3901               	andlw	1
   742  076C  00F4               	movwf	??_readKey+1
   743  076D  01F5               	clrf	??_readKey+2
   744  076E  0874               	movf	??_readKey+1,w
   745  076F  00AA               	movwf	_bitMap+10
   746  0770  0875               	movf	??_readKey+2,w
   747  0771  00AB               	movwf	_bitMap+11
   748  0772                     l797:
   749                           
   750                           ;main.c: 195:     bitMap[2][1] = PORTBbits.RB5;
   751  0772  0E06               	swapf	6,w	;volatile
   752  0773  00F3               	movwf	??_readKey
   753  0774  0C73               	rrf	??_readKey,w
   754  0775  3901               	andlw	1
   755  0776  00F4               	movwf	??_readKey+1
   756  0777  01F5               	clrf	??_readKey+2
   757  0778  0874               	movf	??_readKey+1,w
   758  0779  00B2               	movwf	_bitMap+18
   759  077A  0875               	movf	??_readKey+2,w
   760  077B  00B3               	movwf	_bitMap+19
   761  077C                     l799:
   762                           
   763                           ;main.c: 196:     bitMap[3][1] = PORTBbits.RB4;
   764  077C  0E06               	swapf	6,w	;volatile
   765  077D  3901               	andlw	1
   766  077E  00F3               	movwf	??_readKey
   767  077F  01F4               	clrf	??_readKey+1
   768  0780  0873               	movf	??_readKey,w
   769  0781  00BA               	movwf	_bitMap+26
   770  0782  0874               	movf	??_readKey+1,w
   771  0783  00BB               	movwf	_bitMap+27
   772  0784                     l801:
   773                           
   774                           ;main.c: 197:     PORTBbits.RB2 = 0;
   775  0784  1106               	bcf	6,2	;volatile
   776  0785                     l803:
   777                           
   778                           ;main.c: 198:     TRISBbits.TRISB2 = 1;
   779  0785  1683               	bsf	3,5	;RP0=1, select bank1
   780  0786  1303               	bcf	3,6	;RP1=0, select bank1
   781  0787  1506               	bsf	6,2	;volatile
   782  0788                     l805:
   783                           
   784                           ;main.c: 201:     TRISBbits.TRISB1 = 0;
   785  0788  1086               	bcf	6,1	;volatile
   786  0789                     l807:
   787                           
   788                           ;main.c: 202:     PORTBbits.RB1 = 1;
   789  0789  1283               	bcf	3,5	;RP0=0, select bank0
   790  078A  1303               	bcf	3,6	;RP1=0, select bank0
   791  078B  1486               	bsf	6,1	;volatile
   792  078C                     l809:
   793                           
   794                           ;main.c: 203:     bitMap[0][2] = PORTBbits.RB7;
   795  078C  0D06               	rlf	6,w	;volatile
   796  078D  0D06               	rlf	6,w	;volatile
   797  078E  3901               	andlw	1
   798  078F  00F3               	movwf	??_readKey
   799  0790  01F4               	clrf	??_readKey+1
   800  0791  0873               	movf	??_readKey,w
   801  0792  00A4               	movwf	_bitMap+4
   802  0793  0874               	movf	??_readKey+1,w
   803  0794  00A5               	movwf	_bitMap+5
   804  0795                     l811:
   805                           
   806                           ;main.c: 204:     bitMap[1][2] = PORTBbits.RB6;
   807  0795  0E06               	swapf	6,w	;volatile
   808  0796  00F3               	movwf	??_readKey
   809  0797  0CF3               	rrf	??_readKey,f
   810  0798  0C73               	rrf	??_readKey,w
   811  0799  3901               	andlw	1
   812  079A  00F4               	movwf	??_readKey+1
   813  079B  01F5               	clrf	??_readKey+2
   814  079C  0874               	movf	??_readKey+1,w
   815  079D  00AC               	movwf	_bitMap+12
   816  079E  0875               	movf	??_readKey+2,w
   817  079F  00AD               	movwf	_bitMap+13
   818  07A0                     l813:
   819                           
   820                           ;main.c: 205:     bitMap[2][2] = PORTBbits.RB5;
   821  07A0  0E06               	swapf	6,w	;volatile
   822  07A1  00F3               	movwf	??_readKey
   823  07A2  0C73               	rrf	??_readKey,w
   824  07A3  3901               	andlw	1
   825  07A4  00F4               	movwf	??_readKey+1
   826  07A5  01F5               	clrf	??_readKey+2
   827  07A6  0874               	movf	??_readKey+1,w
   828  07A7  00B4               	movwf	_bitMap+20
   829  07A8  0875               	movf	??_readKey+2,w
   830  07A9  00B5               	movwf	_bitMap+21
   831  07AA                     l815:
   832                           
   833                           ;main.c: 206:     bitMap[3][2] = PORTBbits.RB4;
   834  07AA  0E06               	swapf	6,w	;volatile
   835  07AB  3901               	andlw	1
   836  07AC  00F3               	movwf	??_readKey
   837  07AD  01F4               	clrf	??_readKey+1
   838  07AE  0873               	movf	??_readKey,w
   839  07AF  00BC               	movwf	_bitMap+28
   840  07B0  0874               	movf	??_readKey+1,w
   841  07B1  00BD               	movwf	_bitMap+29
   842  07B2                     l817:
   843                           
   844                           ;main.c: 207:     PORTBbits.RB1 = 0;
   845  07B2  1086               	bcf	6,1	;volatile
   846  07B3                     l819:
   847                           
   848                           ;main.c: 208:     TRISBbits.TRISB1 = 1;
   849  07B3  1683               	bsf	3,5	;RP0=1, select bank1
   850  07B4  1303               	bcf	3,6	;RP1=0, select bank1
   851  07B5  1486               	bsf	6,1	;volatile
   852  07B6                     l821:
   853                           
   854                           ;main.c: 210:     TRISBbits.TRISB0 = 0;
   855  07B6  1006               	bcf	6,0	;volatile
   856  07B7                     l823:
   857                           
   858                           ;main.c: 211:     PORTBbits.RB0 = 1;
   859  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   860  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   861  07B9  1406               	bsf	6,0	;volatile
   862  07BA                     l825:
   863                           
   864                           ;main.c: 212:     bitMap[0][3] = PORTBbits.RB7;
   865  07BA  0D06               	rlf	6,w	;volatile
   866  07BB  0D06               	rlf	6,w	;volatile
   867  07BC  3901               	andlw	1
   868  07BD  00F3               	movwf	??_readKey
   869  07BE  01F4               	clrf	??_readKey+1
   870  07BF  0873               	movf	??_readKey,w
   871  07C0  00A6               	movwf	_bitMap+6
   872  07C1  0874               	movf	??_readKey+1,w
   873  07C2  00A7               	movwf	_bitMap+7
   874  07C3                     l827:
   875                           
   876                           ;main.c: 213:     bitMap[1][3] = PORTBbits.RB6;
   877  07C3  0E06               	swapf	6,w	;volatile
   878  07C4  00F3               	movwf	??_readKey
   879  07C5  0CF3               	rrf	??_readKey,f
   880  07C6  0C73               	rrf	??_readKey,w
   881  07C7  3901               	andlw	1
   882  07C8  00F4               	movwf	??_readKey+1
   883  07C9  01F5               	clrf	??_readKey+2
   884  07CA  0874               	movf	??_readKey+1,w
   885  07CB  00AE               	movwf	_bitMap+14
   886  07CC  0875               	movf	??_readKey+2,w
   887  07CD  00AF               	movwf	_bitMap+15
   888  07CE                     l829:
   889                           
   890                           ;main.c: 214:     bitMap[2][3] = PORTBbits.RB5;
   891  07CE  0E06               	swapf	6,w	;volatile
   892  07CF  00F3               	movwf	??_readKey
   893  07D0  0C73               	rrf	??_readKey,w
   894  07D1  3901               	andlw	1
   895  07D2  00F4               	movwf	??_readKey+1
   896  07D3  01F5               	clrf	??_readKey+2
   897  07D4  0874               	movf	??_readKey+1,w
   898  07D5  00B6               	movwf	_bitMap+22
   899  07D6  0875               	movf	??_readKey+2,w
   900  07D7  00B7               	movwf	_bitMap+23
   901  07D8                     l831:
   902                           
   903                           ;main.c: 215:     bitMap[3][3] = PORTBbits.RB4;
   904  07D8  0E06               	swapf	6,w	;volatile
   905  07D9  3901               	andlw	1
   906  07DA  00F3               	movwf	??_readKey
   907  07DB  01F4               	clrf	??_readKey+1
   908  07DC  0873               	movf	??_readKey,w
   909  07DD  00BE               	movwf	_bitMap+30
   910  07DE  0874               	movf	??_readKey+1,w
   911  07DF  00BF               	movwf	_bitMap+31
   912  07E0                     l833:
   913                           
   914                           ;main.c: 216:     PORTBbits.RB0 = 0;
   915  07E0  1006               	bcf	6,0	;volatile
   916  07E1                     l835:
   917                           
   918                           ;main.c: 217:     TRISBbits.TRISB0 = 1;
   919  07E1  1683               	bsf	3,5	;RP0=1, select bank1
   920  07E2  1303               	bcf	3,6	;RP1=0, select bank1
   921  07E3  1406               	bsf	6,0	;volatile
   922                           
   923                           ;main.c: 220:     return 'B';
   924  07E4  3042               	movlw	66
   925  07E5                     l74:
   926  07E5  0008               	return
   927  07E6                     __end_of_readKey:
   928                           
   929                           	psect	text2
   930  06AA                     __ptext2:	
   931 ;; *************** function _rxISR *****************
   932 ;; Defined at:
   933 ;;		line 56 in file "main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0
   949 ;;      Temps:          2       0       0       0       0
   950 ;;      Totals:         2       0       0       0       0
   951 ;;Total ram usage:        2 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		Interrupt level 1
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960  06AA                     _rxISR:	
   961                           ;psect for function _rxISR
   962                           
   963  06AA                     i1l853:
   964                           
   965                           ;main.c: 58:     if (PIR1bits.RCIF == 1)
   966  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   967  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   968  06AC  1E8C               	btfss	12,5	;volatile
   969  06AD  2EAF               	goto	u9_21
   970  06AE  2EB0               	goto	u9_20
   971  06AF                     u9_21:
   972  06AF  2EB2               	goto	i1l46
   973  06B0                     u9_20:
   974  06B0                     i1l855:
   975                           
   976                           ;main.c: 59:     {;main.c: 60:         PORTB = 0xFF;
   977  06B0  30FF               	movlw	255
   978  06B1  0086               	movwf	6	;volatile
   979  06B2                     i1l46:
   980  06B2  0872               	movf	??_rxISR+1,w
   981  06B3  008A               	movwf	10
   982  06B4  0E71               	swapf	??_rxISR,w
   983  06B5  0083               	movwf	3
   984  06B6  0EFE               	swapf	btemp,f
   985  06B7  0E7E               	swapf	btemp,w
   986  06B8  0009               	retfie
   987  06B9                     __end_of_rxISR:
   988  007E                     btemp	set	126	;btemp
   989  007E                     wtemp0	set	126
   990                           
   991                           	psect	intentry
   992  0004                     __pintentry:	
   993                           ;incstack = 0
   994                           ; Regs used in _rxISR: [wreg]
   995                           
   996  0004                     interrupt_function:
   997  007E                     saved_w	set	btemp
   998  0004  00FE               	movwf	btemp
   999  0005  0E03               	swapf	3,w
  1000  0006  00F1               	movwf	??_rxISR
  1001  0007  080A               	movf	10,w
  1002  0008  00F2               	movwf	??_rxISR+1
  1003  0009  120A  118A  2EAA   	ljmp	_rxISR
  1004                           
  1005                           	psect	idloc
  1006                           
  1007                           ;Config register IDLOC0 @ 0x2000
  1008                           ;	unspecified, using default values
  1009  2000                     	org	8192
  1010  2000  3FFF               	dw	16383
  1011                           
  1012                           ;Config register IDLOC1 @ 0x2001
  1013                           ;	unspecified, using default values
  1014  2001                     	org	8193
  1015  2001  3FFF               	dw	16383
  1016                           
  1017                           ;Config register IDLOC2 @ 0x2002
  1018                           ;	unspecified, using default values
  1019  2002                     	org	8194
  1020  2002  3FFF               	dw	16383
  1021                           
  1022                           ;Config register IDLOC3 @ 0x2003
  1023                           ;	unspecified, using default values
  1024  2003                     	org	8195
  1025  2003  3FFF               	dw	16383
  1026                           
  1027                           	psect	config
  1028                           
  1029                           ;Config register CONFIG1 @ 0x2007
  1030                           ;	Oscillator Selection bits
  1031                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1032                           ;	Watchdog Timer Enable bit
  1033                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1034                           ;	Power-up Timer Enable bit
  1035                           ;	PWRTE = OFF, PWRT disabled
  1036                           ;	RE3/MCLR pin function select bit
  1037                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1038                           ;	Code Protection bit
  1039                           ;	CP = OFF, Program memory code protection is disabled
  1040                           ;	Data Code Protection bit
  1041                           ;	CPD = OFF, Data memory code protection is disabled
  1042                           ;	Brown Out Reset Selection bits
  1043                           ;	BOREN = ON, BOR enabled
  1044                           ;	Internal External Switchover bit
  1045                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1046                           ;	Fail-Safe Clock Monitor Enabled bit
  1047                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1048                           ;	Low Voltage Programming Enable bit
  1049                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1050                           ;	In-Circuit Debugger Mode bit
  1051                           ;	DEBUG = 0x1, unprogrammed default
  1052  2007                     	org	8199
  1053  2007  2FD2               	dw	12242
  1054                           
  1055                           ;Config register CONFIG2 @ 0x2008
  1056                           ;	Brown-out Reset Selection bit
  1057                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1058                           ;	Flash Program Memory Self Write Enable bits
  1059                           ;	WRT = OFF, Write protection off
  1060  2008                     	org	8200
  1061  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      8       8
    BANK0            80      0      48
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__getData	PTR int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_readKey

Critical Paths under _rxISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rxISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rxISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rxISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rxISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                                              5 COMMON     3     3      0
                            _readKey
 ---------------------------------------------------------------------------------
 (1) _readKey                                              3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _rxISR                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readKey

 _rxISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      8       8       1       61.5%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      38      12        0.0%
ABS                  0      0      38       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 19 19:21:12 2022

                      pc 0002                       l74 07E5                       fsr 0004  
                    l801 0784                      l811 0795                      l803 0785  
                    l821 07B6                      l813 07A0                      l805 0788  
                    l901 070B                      l831 07D8                      l823 07B7  
                    l815 07AA                      l807 0789                      l903 070C  
                    l833 07E0                      l825 07BA                      l817 07B2  
                    l809 078C                      l905 0712                      l835 07E1  
                    l827 07C3                      l819 07B3                      l771 072B  
                    l763 0724                      l907 0713                      l829 07CE  
                    l781 0744                      l773 072C                      l765 0728  
                    l791 075B                      l783 074E                      l775 072D  
                    l767 0729                      l793 075E                      l785 0756  
                    l777 0730                      l769 072A                      l795 0767  
                    l787 0757                      l779 0739                      l891 06E6  
                    l797 0772                      l789 075A                      l893 06F2  
                    l799 077C                      l895 06F7                      l887 06DC  
                    l897 0700                      l889 06E4                      l899 0703  
                    u110 070B                      u111 070A                      u120 0712  
                    u121 0711                      u147 06EA                      u157 06FB  
                    u167 0719                      indf 0000                     i1l46 06B2  
                   u9_20 06B0                     u9_21 06AF                     _main 06DC  
                   btemp 007E                     start 000C                    ?_main 0071  
                  i1l853 06AA                    i1l855 06B0                    _SPBRG 0099  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087          __end_of_readKey 07E6                    _rxISR 06AA  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E6             __end_of_main 0724                   ??_main 0076  
                 ?_rxISR 0071                   _SPBRGH 009A                   _bitMap 0020  
                 _keyMap 0040                ??_readKey 0073                   saved_w 007E  
__end_of__initialization 07FC           __pcstackCOMMON 0071             __pidataBANK0 06B9  
          __end_of_rxISR 06B9                  ??_rxISR 0071               __pbssBANK0 0020  
             __pmaintext 06DC               __pintentry 0004                  __ptext1 0724  
                __ptext2 06AA                  _readKey 0724                  clrloop0 06A3  
   end_of_initialization 07FC                _RCSTAbits 0018                _PORTBbits 0006  
              _PORTCbits 0007                _TRISBbits 0086                _TRISCbits 0087  
              _TXSTAbits 0098              _BAUDCTLbits 0187      start_initialization 07E6  
             init_fetch0 06C9              __pdataBANK0 0040                ___latbits 0002  
               ?_readKey 0071        interrupt_function 0004                clear_ram0 06A2  
               _PIE1bits 008C                 _PIR1bits 000C               _INTCONbits 000B  
               init_ram0 06CD                 intlevel1 0000               _OSCCONbits 008F  
